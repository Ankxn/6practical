Here are the Oracle SQL (PL/SQL) answers for Assignment â€“ 4, written simply and clearly as requested:


---

1. PL/SQL code to calculate sum, max, min, avg of salary

DECLARE
    v_sum   NUMBER;
    v_max   NUMBER;
    v_min   NUMBER;
    v_avg   NUMBER;
BEGIN
    SELECT SUM(salary), MAX(salary), MIN(salary), AVG(salary)
    INTO v_sum, v_max, v_min, v_avg
    FROM empmst;

    DBMS_OUTPUT.PUT_LINE('Total Salary: ' || v_sum);
    DBMS_OUTPUT.PUT_LINE('Max Salary: ' || v_max);
    DBMS_OUTPUT.PUT_LINE('Min Salary: ' || v_min);
    DBMS_OUTPUT.PUT_LINE('Average Salary: ' || v_avg);
END;
/


---

2. PL/SQL program to check salary and update accordingly (e.g., empno = 10001)

DECLARE
    v_salary empmst.salary%TYPE;
BEGIN
    SELECT salary INTO v_salary FROM empmst WHERE empno = 10001;

    DBMS_OUTPUT.PUT_LINE('Current Salary: ' || v_salary);

    IF v_salary >= 10000 THEN
        DBMS_OUTPUT.PUT_LINE('Salary >= 10000');
        UPDATE empmst SET salary = salary + 2000 WHERE empno = 10001;
    ELSE
        DBMS_OUTPUT.PUT_LINE('Salary < 10000');
        UPDATE empmst SET salary = salary + 1000 WHERE empno = 10001;
    END IF;

    COMMIT;

    SELECT salary INTO v_salary FROM empmst WHERE empno = 10001;
    DBMS_OUTPUT.PUT_LINE('Updated Salary: ' || v_salary);
END;
/


---

3. PL/SQL code to select employees from a dept and handle exceptions (e.g., deptno = 15)

DECLARE
    v_emp empmst%ROWTYPE;
BEGIN
    SELECT * INTO v_emp FROM empmst WHERE deptno = 15;

    DBMS_OUTPUT.PUT_LINE('Emp No: ' || v_emp.empno);
    DBMS_OUTPUT.PUT_LINE('Name: ' || v_emp.empname);
    DBMS_OUTPUT.PUT_LINE('Salary: ' || v_emp.salary);
EXCEPTION
    WHEN TOO_MANY_ROWS THEN
        DBMS_OUTPUT.PUT_LINE('Error: More than one row returned.');
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('Error: No data found for deptno 15.');
END;
/


---

